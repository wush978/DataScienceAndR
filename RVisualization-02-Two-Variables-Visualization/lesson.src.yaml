- Class: meta
  Course: DataScienceAndR
  Lesson: RVisualization-02-Multivariable-Visualization
  Author: Johnson Hsieh and Wush Wu
  Type: Standard
  Organization: DSP/Taiwan R User Group
  Version: 2.3.1.2

- Class: text
  Output: |
    這個課程是讓同學理解，如何透過資料視覺化的方式，找出不同欄位之間的關係與特徵。

- Class: cmd_question
  Output: |
    我們拿事先準備好的`hsb`資料集作為範例，記載了高中學生的基礎資料與各個科目的考試成績的資料，
    在RVisualization-01-One-Variable-Visualization 課程中曾使用過。
    本資料包含11個欄位、200筆記錄（200位學生），
    第一欄(id)代表該名學生的編號；
    第二欄(sex)代表學生性別；第三欄(race)代表學生的種族；
    第四欄(ses)代表學生家庭社經等級；
    第五欄(schtyp)代表是學校是公立或私立；
    第六欄(prog)代表學校的類型；
    第七欄至第十一欄則是各科考試成績。
    請同學輸入View(hsb)先看看數據。
  CorrectAnswer: View(hsb)
  AnswerTests: omnitest('View(hsb)')

- Class: text
  Output: |
    在第一課中，`hsb$math`有混入-99，模擬現實社會科學界在處理數據時，常常用-99或99等不自然的
    值來表示遺失的資料。而這一課中，我們使用完整的`hsb`資料給同學練習。

- Class: text
  Output: |
    Part A. 類別欄位 vs.類別欄位的資料視覺化。

- Class: cmd_question
  Output: |
    考慮兩個類別型欄位的視覺化。我們關心這筆資料中學生性別(sex)與公私立(schtyp)學校的關聯。
    先使用`table()`函數來建立交叉表 (cross table)，
    請同學輸入以下指令，將交叉表指向`tab1`這個變數：`tab1 <- table(hsb$sex, hsb$schtyp)`
  CorrectAnswer: tab1 <- table(hsb$sex, hsb$schtyp)
  AnswerTests: omnitest('tab1 <- table(hsb$sex, hsb$schtyp)')
  Hint: tab1 <- table(hsb$sex, hsb$schtyp)

- Class: cmd_question
  Output: |
    接下來，請同學輸入`barplot(tab1, legend=TRUE)`這個長條圖繪製函數，
    針對`tab1`這筆數據畫出堆疊長條圖(stackd bar plot)
  CorrectAnswer: barplot(tab1, legend=TRUE)
  AnswerTests: omnitest('barplot(tab1, legend=TRUE)')

- Class: text
  Output: |
    堆疊長條圖中有兩個顏色：淺灰、深灰分別代表男性(male)與女性(female)，

- Class: mult_question
  Output: |
    請問從這張圖中可以發現，哪種學校的數量比較多?
    A. 公立學校(public); B. 私立學校(private)
  AnswerChoices: A;B
  CorrectAnswer: "A"
  AnswerTests: omnitest(correctVal = "A")

- Class: mult_question
  Output: |
    請問從這張圖中可以發現，私立學校的男生多還是女生多?
    A. 男生(male); B. 女生(female)
  AnswerChoices: A;B
  CorrectAnswer: 'B'
  AnswerTests: omnitest(correctVal = "B")


- Class: cmd_question
  Output: |
    同學在作答時可能會發現，直接從堆疊長條圖上觀察不同顏色的區塊的大小其實不是太容易，
    如果我們的目的是要比較不同顏色的區塊大小，應該採用分組長條圖 (grouped bar plot)。
    請同學輸入：`barplot(tab1, legend=TRUE, beside = TRUE, args.legend=list(x=3, y=90))`
    畫出分組長條圖：
  CorrectAnswer: barplot(tab1, legend=TRUE, beside = TRUE, args.legend=list(x=3, y=90))
  AnswerTests: omnitest('barplot(tab1, legend=TRUE, beside = TRUE, args.legend=list(x=3, y=90))')

- Class: text
  Output: |
    透過觀察分組長條圖，我們可以更輕易的發現私立學校 (private) 的女生人數多於男生 (female > male)。


- Class: text
  Output: |
    在畫長條圖時，新增之圖例可能會蓋住原本的圖片，我們可以透過`args.legend`參數來調整圖例位置。


- Class: text
  Output: |
    Part B. 類別欄位 vs. 類別欄位 vs. 單一數值的資料視覺化。

- Class: text
  Output: |
    在畫長條圖時，不一定只使用次數作圖，也有可以是某變數的數值結果，
    譬如：平均數 (`mean`)、中位數 (`median`) 以及標準差 (`sd`)。

- Class: text
  Output: |
    我們可以使用R 的`dplyr`套件中的`group_by`與`summarise`，計算特定組別下的統計指標。
    譬如在給定學校公立或私立 (schtyp)、性別為男生或女生 (sex) 之下，學生的平均數學成績 (math)。
    這部分的操作在 RDataEngineer-05-Data-Manipulation 課程中有詳盡的介紹。

- Class: cmd_question
  Output: 請大家先安裝`dplyr`套件。
  CorrectAnswer: check_then_install("dplyr", "0.4.3")
  AnswerTests: test_package_version("dplyr", "0.4.3")
  Hint: install.packages("dplyr")

- Class: cmd_question
  Output: 接著請大家載入dplyr套件
  CorrectAnswer: library(dplyr)
  AnswerTests: test_search_path("dplyr")
  Hint: library(dplyr)

- Class: cmd_question
  Output: |
    請同學利用以下範例計算組內平均數學成績 `dat2 <- summarise(group_by(hsb, sex, schtyp), math.avg=mean(math))`：
  CorrectAnswer: dat2 <- summarise(group_by(hsb, sex, schtyp), math.avg=mean(math))
  AnswerTests: omnitest('dat2 <- summarise(group_by(hsb, sex, schtyp), math.avg=mean(math))')

- Class: cmd_question
  Output: |
    接著利用R 預設的`xtabs`函數將變數`dat2`轉換成交叉`tab2`表。
    請同學利用以下範例計算組內平均數學成績 `tab2 <- xtabs(formula = math.avg ~ sex + schtyp , data = dat2)`：
  CorrectAnswer: tab2 <- xtabs(formula = math.avg ~ sex + schtyp , data = dat2)
  AnswerTests: omnitest('tab2 <- xtabs(formula = math.avg ~ sex + schtyp , data = dat2)')

- Class: text
  Output: |
    在`xtabs`的函數中有一個特別的參數`formula`，我們可以使用`?xtabs`透過說明文件來理解`formula`的意涵。
    `formula`是R 語言中一個特別的物件，常被用來模化欄位與欄位之間的模型關係。
    在本例中，波浪符號`~`的左邊欄位表示應填入交叉表內的值 (數值型態)， 波浪符號右邊的的欄位則是交叉表的類型 (類別型態)，
    波浪符號右邊的欄位則以加號`+`作為連結。有關於其他`formula`物件的使用方式可參考線性模型函數的說明文件`?lm`。

- Class: cmd_question
  Output: |
    現在請同學針對交叉表`tab2`，輸入指令：
    `barplot(tab2, beside = TRUE, ylim = c(50, 58), xpd = FALSE)`
    繪製分組長條圖：
  CorrectAnswer: barplot(tab2, beside = TRUE, ylim = c(50, 58), xpd = FALSE)
  AnswerTests: omnitest('barplot(tab2, beside = TRUE, ylim = c(50, 58), xpd = FALSE)')

- Class: text
  Output: |
    為了讓視覺上的差異放大，我們透過`ylim`和`xpd`兩個參數讓長條圖的起始值不是0，而是50
    參數`ylim`能控制圖形的最低與最高值；
    參數`xpd`則表示長條圖是否能超出圖形繪製區域
    如果`xpd=TRUE`則長條圖會跨越x軸，超過圖形繪製範圍。

- Class: text
  Output: |
    Part C. 類別欄位 vs. 單一數值的資料視覺化。

- Class: cmd_question
  Output: |
    關於類別欄位對單一數值的視覺化，一般而言有兩種做法：長條圖 (bar plot)、點標圖 (dor plot)。
    先計算各種族學生 (race) 的閱讀成績中位數 (`read.med=median(read)`)，
    請同學輸入以下指令：`dat3 <- summarise(group_by(hsb, race), read.med=median(read))`
    建立`dat3`
  CorrectAnswer: dat3 <- summarise(group_by(hsb, race), read.med=median(read))
  AnswerTests: omnitest('dat3 <- summarise(group_by(hsb, race), read.med=median(read))')

- Class: cmd_question
  Output: |
    請同學輸入以下指令來繪製長條圖：`barplot(dat3$read.med, names.arg=dat3$race, horiz = TRUE)`
  CorrectAnswer: barplot(dat3$read.med, names.arg=dat3$race, horiz=TRUE)
  AnswerTests: omnitest('barplot(dat3$read.med, names.arg=dat3$race, horiz=TRUE)')

- Class: text
  Output: |
    在函數`barplot`中的參數`names.arg`用來控制每一塊長條的別名。`horiz`讓長條圖以水平的方式呈現。


- Class: cmd_question
  Output: |
    請同學輸入以下指令來繪製點標圖：`dotchart(dat3$read.med, labels = dat3$race)`
  CorrectAnswer: dotchart(dat3$read.med, labels = dat3$race)
  AnswerTests: omnitest('dotchart(dat3$read.med, labels = dat3$race)')

- Class: text
  Output: |
    在函數`dotchart`中的參數`labels`用來控制每一塊長條的別名。

- Class: text
  Output: |
    本範例中，使用相同的資料`dat3`繪製兩種圖形，要說的是這兩種圖形的使用時機可能不完全相同，
    長條圖強調的目的是各類別下的數值之大小(離零或是起始值有多遠)，
    點標圖強調的則是各類別下數值的位置，譬如政黨傾向偏左還是偏右(越大不一定越好)。

- Class: text
  Output: |
    Part D. 類別欄位 vs. 數值欄位的資料視覺化。

- Class: cmd_question
  Output: |
    與點標圖不同當每一種類別對應一個數值時，應使用箱形圖 (box plot) 進行視覺化，
    譬如各種族學生的閱讀成績之分布，請同學輸入以下指令：`plot(math ~ race, data=hsb)`
  CorrectAnswer: plot(math ~ race, data=hsb)
  AnswerTests: omnitest('plot(math ~ race, data=hsb)')

- Class: mult_question
  Output: |
    請問同學，圖中的顯示哪一種種族的學生有最好的數學成績? A. African American；
    B. Asian；C. Hispanic；D. White ?
  AnswerChoices: A;B;C;D
  CorrectAnswer: 'B'
  AnswerTests: omnitest(correctVal = "B")

- Class: cmd_question
  Output: |
    傳統上，繪製箱形圖會使用`boxplot`函數，現今的R版本已經支援高階繪圖函數`plot`透過
    `formula`的控制來繪製箱型圖 (請注意波浪符號`~`左邊放數值型態的欄位，右邊放類別型態的欄位，並用加號`+`連結)，
    關於箱型圖詳細的控制參數請使用`?boxplot`閱讀說名文件。
    請同學打開`boxplot`的說明文件：
  CorrectAnswer: ?boxplot
  AnswerTests: omnitest('?boxplot')
  Hint: ?boxplot

- Class: mult_question
  Output: |
    請問下列哪一個統計指標「不會」出現在boxplot的結果中？
    請參考說明文件中，Value段落關於`stats`的說明作答。
    A: the lower hinge B: the median C: the mean D: the upper hinge
  AnswerChoices: A;B;C;D
  CorrectAnswer: "C"
  AnswerTests: omnitest(correctVal = "C")

- Class: cmd_question
  Output: |
    練習在`boxplot`中控制`formula`以加入更多類別行欄位進行比較。請同學輸入以下指令：
    `boxplot(math ~ schtyp, data=hsb, col=c("darkblue", "gold"))`
  CorrectAnswer: boxplot(math ~ schtyp, data=hsb, col=c("darkblue", "gold"))
  AnswerTests: omnitest('boxplot(math ~ schtyp, data=hsb, col=c("darkblue", "gold"))')

- Class: cmd_question
  Output: |
    在`boxplot`上加入圖例`legend`。請同學輸入以下指令：
    `legend("top", c("private", "public"), fill=c("darkblue", "gold"))`
  CorrectAnswer: legend("topleft", c("private", "public"), fill=c("darkblue", "gold"))
  AnswerTests: omnitest('legend("topleft", c("private", "public"), fill=c("darkblue", "gold"))')

- Class: mult_question
  Output: |
    請問同學，依照圖中的結果，就讀公立學校的學生的數學成績比較好還是私立學校的學生的數學成績比較好?
    A. 公立 (public.Hispanic)；
    B. 私立 (private.Hispanic)
    C. 沒有明顯差距
  AnswerChoices: A;B;C
  CorrectAnswer: 'C'
  AnswerTests: omnitest(correctVal = "C")

- Class: text
  Output: |
    因為兩組數據的boxplot結果高度重疊，所以判斷公立學校與私立學校的學生在數學表現上沒有明顯差距。

- Class: text
  Output: |
    Part E. 數值欄位 vs. 數值欄位的資料視覺化。

- Class: text
  Output: |
    繪製兩個數值型欄位最簡單的圖形就是散佈圖 (scatter plot)，
    在R 語言中使用繪圖函數`plot(x, y)`進行繪製。
    其中第一個參數`x`表示x軸的變數、第二參數則表示y軸的變數。

- Class: cmd_question
  Output: |
    請輸入：`plot(x=hsb$math, y=hsb$read)`
    繪製`hsb`資料集中數學 (`x=hsb$math`) 跟閱讀 (`y=hsb$read`) 成績的散佈圖。
  CorrectAnswer: plot(x=hsb$math, y=hsb$read)
  AnswerTests: omnitest('plot(x=hsb$math, y=hsb$read)')

- Class: text
  Output: |
    由散佈圖可以發現，學生的數學與閱讀成績呈現正相關，即數學成績越高，閱讀成績越高，反之亦然。

- Class: cmd_question
  Output: |
    繪圖函數`plot`也可以使用`formula`進行繪圖。
    請同學在`plot`函數中的第一個參數使用`read ~ math`，第二個參數使用`data=hsb`，
    重新繪製學生數學與閱讀成績的散佈圖。
    請注意波浪符號`~`左邊的參數表示反應變數 (response variable)；右邊的參數表示解釋變數 (dependent variable)。
  CorrectAnswer: plot(read ~ math, data=hsb)
  AnswerTests: omnitest('plot(read ~ math, data=hsb)')

- Class: cmd_question
  Output: |
    值得一提的是也可以在`plot`中改用`~ read + math`達到完全一樣的效果，
    請同學在`plot`函數中的第一個參數使`~ read + math`，第二個參數使用`data=hsb`，
    重新繪製學生數學與閱讀成績的散佈圖。
  CorrectAnswer: plot(~ read + math, data=hsb)
  AnswerTests: omnitest('plot(~ read + math, data=hsb)')


- Class: cmd_question
  Output: |
    當欄位數大於二時，可以透過`plot`函數中的formula功能對欄位間的兩兩比較進行作圖。
    請同學輸入以下範例以了解的使用方式：
    plot(~read+math+science+socst,data=hsb, main="HSB score")
  CorrectAnswer: plot(~read+math+science+socst,data=hsb, main="HSB score")
  AnswerTests: omnitest('plot(~read+math+science+socst,data=hsb, main="HSB score")')


- Class: text
  Output: |
    Part F. 數值欄位 vs. 數值欄位 vs. 類別欄位的資料視覺化。

- Class: text
  Output: |
    當欲進行資料探索的欄位大於兩個維度時，可以對散佈圖做進一步的加工，
    譬如改變點的顏色(`col`)、形狀(`pch`)以及大小(`cex`)，
    上述參數可以使用向量型態進行設定。
    定義以下變數：

- Class: cmd_question
  Output: |
    請同學定義變數 `col.sex <- ifelse(hsb$sex=="male", "#e34a3355", "#2c7fb855")`；
  CorrectAnswer: col.sex <- ifelse(hsb$sex=="male", "#e34a3355", "#2c7fb855")
  AnswerTests: omnitest('col.sex <- ifelse(hsb$sex=="male", "#e34a3355", "#2c7fb855")')

- Class: cmd_question
  Output: |
    請同學定義變數 `pch.schtyp <- ifelse(hsb$schtyp=="public", 1, 19)`；
  CorrectAnswer: pch.schtyp <- ifelse(hsb$schtyp=="public", 1, 19)
  AnswerTests: omnitest('pch.schtyp <- ifelse(hsb$schtyp=="public", 1, 19)')

- Class: cmd_question
  Output: |
    請同學定義變數 `cex.science <- (hsb$science-25)/(50)*5`；
  CorrectAnswer: cex.science <- (hsb$science-25)/(50)*5
  AnswerTests: omnitest('cex.science <- (hsb$science-25)/(50)*5')

- Class: cmd_question
  Output: |
    透過上述三個新增變數，我們可以對數學與閱讀成績的散佈圖作進一步的加工，
    請同學輸入以下範例：`plot(~read+math, data=hsb, col=col.sex, pch=pch.schtyp, cex=cex.science)`
  CorrectAnswer: plot(~read+math, data=hsb, col=col.sex, pch=pch.schtyp, cex=cex.science)
  AnswerTests: omnitest('plot(~read+math, data=hsb, col=col.sex, pch=pch.schtyp, cex=cex.science)')

- Class: text
  Output: |
    以上這張圖，除了原本的read v.s. math的相關性之外，還多了以下的資訊：

- Class: text
  Output: |
    一個是 cex.science 觀察發現圓點隨著左下到右上逐漸放大，顯示科學成績與閱讀、數學成績程正相關。

- Class: text
  Output: |
    一個是 pch.public 觀察發現，實心的圓點散佈的程度叫空心圓點來得緊密，顯示私立學校的學生成績變異較大。

- Class: text
  Output: |
    這樣的圖，如果沒有圖例`legend`是不及格的。雖然我們可以看出剛剛的資訊，可是若要對回原本的資料，
    （空心和實心表示公立與私立、顏色表示性別...等等）
    製作這張圖的圖例，其實需要複雜的程式碼才能辦到。

- Class: text
  Output: |
    這門課，最主要是希望同學能夠吸收圖形的解讀方式，以及了解R的基本繪圖指令的設計。
    尤其是formula的部份，是我們在R中描述數據間關係的一種語法，未來在許多進階演算法中也都會用到。
    至於R 眾多的低階繪圖指令（`pch`、`cex`、`legend`等等），要不要熟悉則是見仁見智。
    熟悉的同學，可以雕圖，雕出令人驚豔的視覺化效果。
    反而我們比較希望同學可以理解下一堂課所介紹的ggplot2套件，用一套一致、簡單的邏輯來快速畫出
    有一定質感的圖。

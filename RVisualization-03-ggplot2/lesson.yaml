- Class: meta
  Course: DataScienceAndR
  Lesson: RVisualization-03-ggplot2
  Author: Wush Wu
  Type: Standard
  Organization: Taiwan R User Group
  Version: 2.3.1.2
- Class: text
  Output: 各位同學好，本次課程的目標是介紹ggplot2套件。
- Class: text
  Output: 為什麼我們在學過看過R的繪圖功能後，還要學ggplot2呢？ 因為以下幾點理由：ggplot2提供更美觀的預設圖片。所以我們不用作大量的微調，
    就可以獲得不錯的圖。我們也可以利用theme的功能，直接取用其他貢獻者 繪製的樣本，畫出各種風格的圖。
- Class: text
  Output: 圖形本身會完整的物件化。並且你可以對物件化的圖形做修正。 也就是說，你可以把繪圖的指令結果，存到變數之中。而我們還可以操作 這個變數，更改我們想要的繪圖效果。
- Class: text
  Output: ggplot2和data.frame整合得更好，所以當我們把資料整理 成結構化資料後，ggplot2更能發揮威力。
- Class: text
  Output: 更完整的文件。<http://docs.ggplot2.org>裡面收錄了 所有的繪圖指令。
- Class: text
  Output: |
    所以如果同學能在前面的章節學到繪圖的心法，那ggplot2
    就可以讓同學在實務上更順的串接「資料收集」、「資料整理」與「
    資料視覺化」的動作了。
- Class: cmd_question
  Output: 請同學先安裝ggplot2
  CorrectAnswer: check_then_install("ggplot2", "2.0.0")
  AnswerTests: test_package_version("ggplot2", "2.0.0")
  Hint: install.packages("ggplot2")
- Class: cmd_question
  Output: 請同學載入ggplot2
  CorrectAnswer: library(ggplot2)
  AnswerTests: test_search_path("ggplot2")
  Hint: library(ggplot2)
- Class: text
  Output: |
    由於ggplot2沒有提供上手的vignette，我們就略過查詢vignette的動作。但是還是要提醒同學，
    當我們學習一個套件的時候，不外乎就是先從讀README、找vignette開始。
- Class: cmd_question
  Output: |
    我們還是先從`infert`這筆數據開始。請同學輸入：`g <- ggplot(infert, aes(x = education))`
    建立一個ggplot2物件。
  CorrectAnswer: g <- ggplot(infert, aes(x = education))
  AnswerTests: omnitest("g <- ggplot(infert, aes(x = education))")
  Hint: g <- ggplot(infert, aes(x = education))
- Class: text
  Output: |
    `ggplot`函數通常只需要一個參數。第一個參數是一個data.frame，負責提供資料。
    而後續的參數則會通通傳遞給之後用`+`連結的繪圖函數。
- Class: cmd_question
  Output: |
    請同學輸入：`g + geom_bar()`，繪製第一個ggplot2的長條圖。請同學試試看。
  CorrectAnswer: g + geom_bar()
  AnswerTests: omnitest("g + geom_bar()")
  Hint: g + geom_bar()
- Class: cmd_question
  Output: |
    `geom_bar`會繪製出一個圖層，裡面的內容就是依據`infert`所繪製的bar chart（長條圖）。
    為了更仔細的解釋，先請同學輸入：`?geom_bar`打開這個函數的說明文件。
  CorrectAnswer: ?geom_bar
  AnswerTests: omnitest("?geom_bar")
  Hint: ?geom_bar
- Class: text
  Output: |
    ggplot2的說明文件和一般的函數比較不同，我們舉`geom_bar`為例跟同學說明。
    `geom_bar`的參數有：`mapping`, `data`, `stat`和`position`。`mapping`與`data`
    幾乎是所有`geom_`開頭的函數都有的，所以大家理解一次就夠了。
    一般來說，我們不會在`geom_`開頭的函數指定`data`參數。在這個例子，因為我們輸入的是：
    `g + geom_bar()`，所以`geom_bar`就直接透過`g`知道它正在依照`infert`繪圖。
- Class: text
  Output: |
    `infert`的資料欄位這麼多，ggplot怎麼知道畫的是education呢？這就是透過`geom_bar`的
    `mapping`參數。當初我們在建立`g`的指令是：`ggplot(infert, aes(x = education))`。
    這裡的第二個參數，就會被送到`geom_bar`的`mapping`參數。`mapping`的參數，都是用`aes`
    建立的對應物件，語法就類似：`aes(x = education)`一樣。(請注意，education不需要加上
    雙引號)。
- Class: text
  Output: |
    那`aes`裡面需要哪些參數呢？每個`geom_`開頭的函數需要的`mapping`不太一樣。請同學直接看
    說明文件中，`Aesthetics`的段落。ggplot2列出了所有需要的欄位，而黑色粗體字的是必須要給
    的(如：`x`)。其他的選項有預設值，所以我們不需要給。而這些`mapping`是代表什麼意思呢？
- Class: cmd_question
  Output: |
    所有`mapping`裡面的東西，都會視為`data`的欄位名稱。舉例來說，請同學
    輸入：`g + geom_bar(aes(fill = education))`
  CorrectAnswer: g + geom_bar(aes(fill = education))
  AnswerTests: omnitest('g + geom_bar(aes(fill = education))')
  Hint: g + geom_bar(aes(fill = education))
- Class: text
  Output: |
    同學有沒有注意到，長條圖中區域的顏色改變了。`fill`在這裡就代表填滿區塊的顏色。
    ggplot2在收到`fill = education`之後，就會去尋找infert的education欄位。
    如果找不到，就會找外部名稱為education的變數。
    找到以後，ggplot2就會依照預設的調色盤，根據education的值予以配色，每一個
    類別擁有一個顏色。同時在右半邊新增顏色與education類別對應的說明。
- Class: cmd_question
  Output: 這次請同學輸入：`g + geom_bar(aes(fill = "purple"))`
  CorrectAnswer: g + geom_bar(aes(fill = "purple"))
  AnswerTests: omnitest('g + geom_bar(aes(fill = "purple"))')
  Hint: g + geom_bar(aes(fill = "purple"))
- Class: text
  Output: |
    但是儘管我們輸入"purple"，ggplot2還是用粉紅色來呈現，而不是紫色。
    這是因為ggplot2收到"purple"之後，因為有加雙引號，所以就會假設infert中有一個欄位，所有
    的值都是"purple"。而ggplot2有內建的調色盤，所以就運用調色盤中第一個顏色來著色。在ggplot2
    中如果要指定顏色，只有設定調色盤的顏色一途，無法單純透過`ggplot`或`geom_bar`來達成。
    這點和R 基礎的繪圖API是不同的。
- Class: text
  Output: |
    所有`mapping`參數，也就是`aes`中的設定，ggplot都是依照同樣的思維來處理：一律都是對應到
    `data`的欄位。
- Class: cmd_question
  Output: |
    接著我們使用前面課程用過的`hsb`資料集做範例。請同學輸入：`g <- ggplot(hsb)`
  CorrectAnswer: g <- ggplot(hsb)
  AnswerTests: omnitest('g <- ggplot(hsb)')
  Hint: g <- ggplot(hsb)
- Class: cmd_question
  Output: |
    在我們沒有指定圖層的時候，R是不會畫出圖的，所以上一個指令沒有畫出新的圖。
    接著請同學輸入：`g + geom_bar(aes(x = sex))`畫出「呈現性別分佈」的長條圖。
  CorrectAnswer: g + geom_bar(aes(x = sex))
  AnswerTests: omnitest('g + geom_bar(aes(x = sex))')
  Hint: g + geom_bar(aes(x = sex))
- Class: cmd_question
  Output: |
    同學應該會看到「呈現性別分佈」的長條圖。請同學這次輸入：
    `g + geom_bar(aes(x = sex, fill = race))`
  CorrectAnswer: g + geom_bar(aes(x = sex, fill = race))
  AnswerTests: omnitest('g + geom_bar(aes(x = sex, fill = race))')
  Hint: g + geom_bar(aes(x = sex, fill = race))
- Class: cmd_question
  Output: |
    由於`x = sex`，所以長條圖是以`sex`為主。因為`fill = race`，所以顏色是以種族為主。
    接著請同學輸入：`g + geom_bar(aes(x = sex, fill = race), position = "dodge")`
  CorrectAnswer: g + geom_bar(aes(x = sex, fill = race), position = "dodge")
  AnswerTests: omnitest('g + geom_bar(aes(x = sex, fill = race), position = "dodge")')
  Hint: g + geom_bar(aes(x = sex, fill = race), position = "dodge")
- Class: text
  Output: |
    請比較用`g + geom_bar(aes(x = sex,fill=race))`與
    `g + geom_bar(aes(x = sex, fill = race), position = "dodge")`的差異。
    當`position = "stack"`（預設值）時，長條圖型會將race推疊呈現，而此時圖的重點是在於比較
    sex個數的差異。當`position = "dodge"`時，長條圖會將race錯開呈現，而此時圖的重點是在於
    比較相同sex中，不同race個數的差異。
- Class: cmd_question
  Output: |
    接著請同學輸入`skip()`檢查有無安裝dplyr
  CorrectAnswer: check_then_install("dplyr", "0.4.3")
  AnswerTests: test_package_version("dplyr", "0.4.3")
  Hint: check_then_install("dplyr", "0.4.3")
- Class: cmd_question
  Output: |
    請同學載入dplyr
  CorrectAnswer: library(dplyr)
  AnswerTests: test_search_path("dplyr")
  Hint: library(dplyr)
- Class: script
  Output: |
    請同學利用`group_by`和`summarise`計算各種sex類別的個數。
  Script: RVisualization-03-01.R
  AnswerTests: rvisualization_03_01(answer01)
- Class: cmd_question
  Output: |
    請同學輸入：`ggplot(answer01, aes(x = sex)) + geom_bar()`
  CorrectAnswer: ggplot(answer01, aes(x = sex)) + geom_bar()
  AnswerTests: omnitest('ggplot(answer01, aes(x = sex)) + geom_bar()')
  Hint: ggplot(answer01, aes(x = sex)) + geom_bar()
- Class: cmd_question
  Output: |
    我們會看到一張長條圖，指示兩種性別都是1。這是因為，在`answer01`中，兩種性別各佔一筆資料。
    為了要讓長條圖理解值位於`count`的欄位，我們必須要改成輸入：
    `ggplot(answer01, aes(x = sex, y = count)) + geom_bar(stat = "identity")`
  CorrectAnswer: ggplot(answer01, aes(x = sex, y = count)) + geom_bar(stat = "identity")
  AnswerTests: omnitest('ggplot(answer01, aes(x = sex, y = count)) + geom_bar(stat
    = "identity")')
  Hint: ggplot(answer01, aes(x = sex, y = count)) + geom_bar(stat = "identity")
- Class: text
  Output: |
    剛剛的`stat = "identity"`的意思，就是告訴ggplot不用再去數資料的個數了，直接取用`count`
    欄位當成高度即可。
- Class: text
  Output: |
    `geom_bar`的`stat`和`position`參數是和長條圖相關的參數。而在`aes`中的參數，如：
    `x`、`y`和`fill`，即使是x-y散佈圖或boxplot等，都會使用到的參數。
    ggplot2的設計就是把能共通使用的繪圖參數放到`aes`中，個別圖種自己使用的參數，則放在
    `geom_`開頭的函數中。
- Class: cmd_question
  Output: 接著請同學輸入：`ggplot(hsb, aes(x = math)) + geom_density()`
  CorrectAnswer: ggplot(hsb, aes(x = math)) + geom_density()
  AnswerTests: omnitest('ggplot(hsb, aes(x = math)) + geom_density()')
  Hint: ggplot(hsb, aes(x = math)) + geom_density()
- Class: cmd_question
  Output: |
    上一張圖畫出了`math`欄位的分佈圖。接著我們可以依據性別，畫出不同性別的分佈圖。
    請同學輸入：`ggplot(hsb, aes(x = math, color = sex)) + geom_density()`
  CorrectAnswer: ggplot(hsb, aes(x = math, color = sex)) + geom_density()
  AnswerTests: omnitest('ggplot(hsb, aes(x = math, color = sex)) + geom_density()')
  Hint: ggplot(hsb, aes(x = math, color = sex)) + geom_density()
- Class: cmd_question
  Output: 請同學依據`race`，繪製出各種種族的`read`欄位成績分佈。(請修改上一題的答案)
  CorrectAnswer: ggplot(hsb, aes(x = read, color = race)) + geom_density()
  AnswerTests: omnitest('ggplot(hsb, aes(x = read, color = race)) + geom_density()')
  Hint: ggplot(hsb, aes(x = read, color = race)) + geom_density()
- Class: cmd_question
  Output: 請同學先輸入`?geom_density`打開說明
  CorrectAnswer: ?geom_density
  AnswerTests: omnitest('?geom_density')
  Hint: ?geom_density
- Class: mult_question
  Output: 請問以下哪一個是`geom_density`特有的參數?
  AnswerChoices: data;mapping;stat;x;y
  CorrectAnswer: stat
  AnswerTests: omnitest(correctVal='stat')
  Hint: |
    `geom_`系列函數的前兩個參數一定是`data`和`mapping`。剩下的函數參數才是該函數特有的參數。
- Class: cmd_question
  Output: |
    接下來我們來比較各種性別在公立、私立學校的數學表現。請同學先輸入以下程式碼：
    `dat2 <- summarise(group_by(hsb, sex, schtyp), math.avg = mean(math))`
  CorrectAnswer: dat2 <- summarise(group_by(hsb, sex, schtyp), math.avg = mean(math))
  AnswerTests: omnitest("dat2 <- summarise(group_by(hsb, sex, schtyp), math.avg =
    mean(math))")
  Hint: dat2 <- summarise(group_by(hsb, sex, schtyp), math.avg = mean(math))
- Class: cmd_question
  Output: |
    接著，我們輸入：`g <- ggplot(dat2, aes(x = sex, y = math.avg, fill = schtyp))`
    先建立一個基於dat2的ggplot物件。
  CorrectAnswer: g <- ggplot(dat2, aes(x = sex, y = math.avg, fill = schtyp))
  AnswerTests: omnitest('g <- ggplot(dat2, aes(x = sex, y = math.avg, fill = schtyp))')
  Hint: g <- ggplot(dat2, aes(x = sex, y = math.avg, fill = schtyp))
- Class: mult_question
  Output: |
    請同學先回憶我們對`geom_bar`的參數`stat`的解說。請問同學，如果我們輸入：
    `g + geom_bar(stat = <??>)`，`stat`的參數要給多少？
  AnswerChoices: bin;identity
  CorrectAnswer: identity
  AnswerTests: omnitest(correctVal = "identity")
- Class: cmd_question
  Output: |
    請輸入：`g2 <- g + geom_bar(stat = "identity", position = "dodge")`
  CorrectAnswer: g2 <- g + geom_bar(stat = "identity", position = "dodge")
  AnswerTests: omnitest('g2 <- g + geom_bar(stat = "identity", position = "dodge")')
  Hint: g2 <- g + geom_bar(stat = "identity", position = "dodge")
- Class: cmd_question
  Output: |
    請同學輸入`g2`看一下繪圖結果。
  CorrectAnswer: g2
  AnswerTests: omnitest('g2')
  Hint: g2
- Class: cmd_question
  Output: |
    ggplot 依照性別與公立私立，分別呈現了數學平均。
    更貼心的是，圖例也已經自動產生了。
    如果我們要放大視覺化的差異，想要調整y軸的範圍呢？
    請同學輸入：`g2 + coord_cartesian(ylim=c(40,60))`
  CorrectAnswer: g2 + coord_cartesian(ylim=c(40,60))
  AnswerTests: omnitest('g2 + coord_cartesian(ylim=c(40,60))')
  Hint: g2 + coord_cartesian(ylim=c(40,60))
- Class: text
  Output: |
    同學除了可以學習`coord_cartesian`這個語法之外，也可以注意到
    我們可以把畫圖的指令當成變數給存到如`g2`的R物件之中。
    之後若我們要做調整（例如調整y軸的範圍）只要從`g2`開始用`+`下指令即可。
    這樣的設計讓我們在調整圖形上更方便。
- Class: cmd_question
  Output: |
    在上一堂課程中，我們有介紹過dotchart。ggplot2中也有提供類似的圖層: geom_point。
    請同學輸入：`g3 <- g + geom_point(aes(color = schtyp), size = 10)`
  CorrectAnswer: g3 <- g + geom_point(aes(color = schtyp), size = 10)
  AnswerTests: omnitest('g3 <- g + geom_point(aes(color = schtyp), size = 10)')
  Hint: g3 <- g + geom_point(aes(color = schtyp), size = 10)
- Class: cmd_question
  Output: |
    請輸入`g3`，看看繪圖結果。
  CorrectAnswer: g3
  AnswerTests: omnitest('g3')
  Hint: g3
- Class: cmd_question
  Output: |
    如果要改成水平方向，可以使用：`g3 + coord_flip()`
  CorrectAnswer: g3 + coord_flip()
  AnswerTests: omnitest('g3 + coord_flip()')
  Hint: g3 + coord_flip()
- Class: text
  Output: |
    ggplot2把這些跟座標軸的縮放、翻轉的功能都放到`coord`開頭的函數了。
    一些繪圖常用的座標轉換，像是取log，也都有對應的函數呢，而且都是以
    `coord_`開頭。就如同繪圖、製作圖層的函數都是`geom_`開頭一樣。
    這些API的設計相對R 的繪圖API，是更有系統了。
- Class: cmd_question
  Output: |
    除了觀察單一統計量之外，統計學常用的boxplot，ggplot2也有支援。
    請同學輸入：`g <- ggplot(hsb, aes(x = sex, y = math, fill = schtyp))`
    我們先告訴ggplot2要如何對數據分組。
  CorrectAnswer: g <- ggplot(hsb, aes(x = sex, y = math, fill = schtyp))
  AnswerTests: omnitest('g <- ggplot(hsb, aes(x = sex, y = math, fill = schtyp))')
  Hint: g <- ggplot(hsb, aes(x = sex, y = math, fill = schtyp))
- Class: cmd_question
  Output: |
    接著，我們可以使用geom_boxplot產生圖層：
    `g + geom_boxplot()`
  CorrectAnswer: g + geom_boxplot()
  AnswerTests: omnitest('g + geom_boxplot()')
  Hint: g + geom_boxplot()
- Class: cmd_question
  Output: |
    需要的話，我們可以增加更多欄位，讓boxplot有更多的變化。
    舉例來說，我們可以加上linetype: `g + geom_boxplot(aes(linetype = race))`
  CorrectAnswer: g + geom_boxplot(aes(linetype = race))
  AnswerTests: omnitest('g + geom_boxplot(aes(linetype = race))')
  Hint: g + geom_boxplot(aes(linetype = race))
- Class: mult_question
  Output: |
    雖然這張圖有點複雜，但是因為ggplot2會自動生成圖例，所以仔細看也是很清楚地看到個群分組的差異。
    舉例來說，圖中顯示某族裔美國人的女學生，在公立與私立學校的數學表現差異很大。請問同學，這是哪一
    個種族呢？A: African American, B: Asian, C: Hispanic, D: White
  AnswerChoices: A;B;C;D;E
  CorrectAnswer: C
  AnswerTests: omnitest(correctVal = "C")
- Class: cmd_question
  Output: |
    接下來我們試試看畫散佈圖。請同學輸入：`g <- ggplot(hsb, aes(x = math, y = read))`
  CorrectAnswer: g <- ggplot(hsb, aes(x = math, y = read))
  AnswerTests: omnitest('g <- ggplot(hsb, aes(x = math, y = read))')
  Hint: g <- ggplot(hsb, aes(x = math, y = read))
- Class: cmd_question
  Output: |
    輸入`g + geom_point()`讓ggplot以散佈圖的方式繪製圖層。
  CorrectAnswer: g + geom_point()
  AnswerTests: omnitest('g + geom_point()')
  Hint: g + geom_point()
- Class: cmd_question
  Output: |
    還記得上一個課程最後所繪製的一張圖：，一口氣運用點的大小、形狀、顏色來表示science的表現、
    公立私立與學生的性別。我們也可以在ggplot2中做到：
    `g + geom_point(aes(size = science, pch = schtyp, color = sex))`
  CorrectAnswer: g + geom_point(aes(size = science, pch = schtyp, color = sex))
  AnswerTests: omnitest('g + geom_point(aes(size = science, pch = schtyp, color =
    sex))')
  Hint: g + geom_point(aes(size = science, pch = schtyp, color = sex))
- Class: text
  Output: |
    而且ggplot也自動加上圖標了！
- Class: cmd_question
  Output: |
    接著我們來介紹如何調整ggplot2的配色。假設各位同學想要使用對色盲友善的配色系列，
    在參考Wong. B (2011) Points of View: Color blindness. Nature Methods 8:411後，
    請同學輸入以下的指令：`cb7 <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")`
  CorrectAnswer: cb7 <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2",
    "#D55E00", "#CC79A7")
  AnswerTests: omnitest('cb7 <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
    "#0072B2", "#D55E00", "#CC79A7")')
  Hint: cb7 <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2",
    "#D55E00", "#CC79A7")
- Class: cmd_question
  Output: |
    接著我們先繪製沒修正配色之前的版本。請同學輸入：
    `g <- ggplot(hsb, aes(x = sex, fill = race)) + geom_bar()`
  CorrectAnswer: g <- ggplot(hsb, aes(x = sex, fill = race)) + geom_bar()
  AnswerTests: omnitest('g <- ggplot(hsb, aes(x = sex, fill = race)) + geom_bar()')
  Hint: g <- ggplot(hsb, aes(x = sex, fill = race)) + geom_bar()
- Class: cmd_question
  Output: |
    我們讓R畫出沒修正的版本。請輸入`g`
  CorrectAnswer: g
  AnswerTests: omnitest("g")
  Hint: g
- Class: cmd_question
  Output: |
    接著我們輸入：`g + scale_fill_manual(values=cb7)`來修改配色。
  CorrectAnswer: g + scale_fill_manual(values=cb7)
  AnswerTests: omnitest('g + scale_fill_manual(values=cb7)')
  Hint: g + scale_fill_manual(values=cb7)
- Class: text
  Output: |
    在ggplot2的世界裡，所有圖形的調整，都是透過`+`連接特定的函數來完成的。
- Class: cmd_question
  Output: |
    接下來我們介紹一個函數：`ggtheme`。他讓我們可以輕鬆的轉換ggplot的繪圖風格。
    請同學試試看：`g + theme_minimal()`
  CorrectAnswer: g + theme_minimal()
  AnswerTests: omnitest("g + theme_minimal()")
  Hint: g + theme_minimal()
- Class: text
  Output: 同學可以輸入`?ggtheme`來查詢所有可用的theme
- Class: cmd_question
  Output: |
    同學也可以使用`ggsave`來把圖片輸出到檔案中。請同學先輸入：`dst <- tempfile(fileext = ".png")`
    隨機生成一個暫存檔路徑。
  CorrectAnswer: dst <- tempfile(fileext = ".png")
  AnswerTests: omnitest('dst <- tempfile(fileext = ".png")')
  Hint: dst <- tempfile(fileext = ".png")
- Class: cmd_question
  Output: 請同學輸入：`ggsave(dst)`來把目前的ggplot2圖輸出到`dst`路徑。
  CorrectAnswer: ggsave(dst)
  AnswerTests: omnitest('ggsave(dst)')
  Hint: ggsave(dst)
- Class: cmd_question
  Output: |
    接著請同學輸入：`g <- ggplot(hsb, aes(x = read, y = math)) + geom_point()`
    這裡`g`就代表read v.s. math的x-y散佈圖。
  CorrectAnswer: g <- ggplot(hsb, aes(x = read, y = math)) + geom_point()
  AnswerTests: omnitest("g <- ggplot(hsb, aes(x = read, y = math)) + geom_point()")
  Hint: g <- ggplot(hsb, aes(x = read, y = math)) + geom_point()
- Class: cmd_question
  Output: |
    我們如果想要一個`race`的類別畫一張圖呢？請同學輸入：
    `g + facet_grid(. ~ race)`
  CorrectAnswer: g + facet_grid(. ~ race)
  AnswerTests: omnitest('g + facet_grid(. ~ race)')
  Hint: g + facet_grid(. ~ race)
- Class: text
  Output: |
    剛剛的`face_grid`是一個比較進階的函數。同學只要記得，如果我們是要對某一個欄位做展開
    （例如剛剛的動作就是對`race`做展開：每個`race`畫一張圖），第一個參數的formula中，
    `~`的左邊放`.`，右邊放要展開的欄位名稱即可（不需要加引號）。
- Class: cmd_question
  Output: |
    如果我們要一次畫出多筆數據兩兩間的散佈圖，就需要使用GGally這個套件。
    請同學安裝。
  CorrectAnswer: check_then_install("GGally", "1.0.1")
  AnswerTests: test_package_version("GGally", "1.0.1")
  Hint: check_then_install("GGally", "1.0.1")
- Class: cmd_question
  Output: 請載入GGally套件。
  CorrectAnswer: library(GGally)
  AnswerTests: test_search_path("GGally")
  Hint: library(GGally)
- Class: cmd_question
  Output: |
    如果我們想要看read, write, math, science 兩兩組合的x-y散佈圖，
    我們只要輸入：`ggpairs(hsb, 7:10)`
    註: 這些欄位分別位於hsb的第7至第10欄。
  CorrectAnswer: ggpairs(hsb, 7:10)
  AnswerTests: omnitest('ggpairs(hsb, 7:10)')
  Hint: ggpairs(hsb, 7:10)
- Class: text
  Output: |
    我們這堂課對ggplot2的介紹就到這裡了。接下來就是挑戰時間。
- Class: cmd_question
  Output: |
    我們自內政部資料開放平台下載了個村（里）戶籍人口統計月報表。有興趣的同學可以輸入：`population_src()`
    來瀏覽資料來源。這裡請同學輸入：head(population)看一下這筆資料。
  CorrectAnswer: head(population)
  AnswerTests: omnitest('head(population)')
  Hint: head(population)
- Class: cmd_question
  Output: |
    接下來我們會在每個步驟先畫一張圖給同學參考。請同學依照指示從`population`中畫出類似的圖。
    受限於技術，目前我們只能請同學自行比對答案。完成之後請同學輸入`submit()`後就可以進行
    下一個挑戰。請同學輸入`skip()`開始第一個挑戰。
  CorrectAnswer: begin_rvisualization_03()
  AnswerTests: rvisualization_03_hw_01()
  Hint: skip()
- Class: script
  Output: |
    請同學想辦法從`population`資料中畫出與參考圖一樣的圖。如果想要再看一次參考圖，請輸入：`hw_01()`
    如果想要直接看參考答案，請輸入：`hw_01`
  Script: RVisualization-03-HW-01.R
  AnswerTests: rvisualization_03_hw_02()
- Class: script
  Output: |
    請同學想辦法從`population`資料中畫出自己居住地的村(里)與性別的分佈圖。具體細節請見參考圖。
    如果想要再看一次參考圖，請輸入：`hw_02()`。如果想要直接看參考答案，請輸入：`hw_02`
  Script: RVisualization-03-HW-02.R
  AnswerTests: rvisualization_03_hw_03()
- Class: script
  Output: |
    請同學想辦法從`population`資料中畫出自己居住地的性別與年齡的分佈圖。具體細節請見參考圖。
    如果想要再看一次參考圖，請輸入：`hw_03()`。如果想要直接看參考答案，請輸入：`hw_03`
  Script: RVisualization-03-HW-03.R
  AnswerTests: rvisualization_03_hw_04()
- Class: script
  Output: |
    請同學想辦法從`population`資料中畫出自己居住地的性別與年齡的分佈圖。具體細節請見參考圖。
    如果想要再看一次參考圖，請輸入：`hw_04()`。如果想要直接看參考答案，請輸入：`hw_04`
  Script: RVisualization-03-HW-04.R
  AnswerTests: rvisualization_03_hw_05()

